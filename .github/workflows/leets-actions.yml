name: leets-actions
run-name: Running
on:
  push:
    branches:
      - main
      - 'releases/**'

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: gitactionbucket
  AWS_CODE_DEPLOY_APPLICATION: cicd-test-cd
  AWS_CODE_DEPLOY_GROUP: cicd-test-cd-group
  RESOURCE_PATH: ./src/main/resources/application.yml

jobs:
  build-with-gradle:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: JDK 17 설치
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: 환경변수 설정
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          spring.datasource.username: ${{ secrets.DATABASE_USERNAME }}
          spring.datasource.url: ${{ secrets.DATABASE_URL }}
          spring.datasource.password: ${{ secrets.DATABASE_PASSWORD }}

          spring.mail.host: ${{ secrets.MAIL_HOST }}
          spring.mail.username: ${{ secrets.MAIL_USERNAME }}
          spring.mail.password: ${{ secrets.MAIL_PASSWORD }}

          spring.security.oauth2.client.registration.google.client-id: ${{ secrets.GOOGLE_ID }}
          spring.security.oauth2.client.registration.google.client-secret: ${{ secrets.GOOGLE_PASSWORD }}
          spring.security.oauth2.client.registration.google.redirect-uri: ${{ secrets.GOOGLE_REDIRECT_URL }}

          jwt.auth.access_secret: ${{ secrets.JWT_ACCESS_SECRET }}
          jwt.auth.refresh_secret: ${{ secrets.JWT_REFRESH_SECRET }}

          cors.origin.development: ${{ secrets.CORS_ORIGIN_DEVELOPMENT }}
          cors.origin.production: ${{ secrets.CORS_ORIGIN_PRODUCTION }}

          google.auth.url: ${{ secrets.GOOGLE_AUTH_URL }}
          google.redirect.url: ${{ secrets.GOOGLE_REDIRECT_URL }}

      - name: gradlew에 실행 권한 부여
        run: chmod +x ./gradlew
      - name: 프로젝트 빌드
        run: ./gradlew clean build -x test
      - name: AWS credential 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}
      - name: S3에 업로드
        run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://$AWS_S3_BUCKET/cicdtest/$GITHUB_SHA.zip --source .
      - name: EC2에 배포
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=cicdtest/$GITHUB_SHA.zip,bundleType=zip
